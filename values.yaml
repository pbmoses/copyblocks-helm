# Default values for copyblocks.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: grafana/copyblocks 
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "r314-e189185"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false 
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi


autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

env:
- name: S3_ACCESS_KEY
  valueFrom:
    secretKeyRef:
      key: access_key_id
      name: copyblocks-s3-secret 
- name: S3_SECRET_KEY
  valueFrom:
    secretKeyRef:
      key: secret_access_key
      name: copyblocks-s3-secret 

### your container arguments go here
### exampler per cloud provider https://pkg.go.dev/github.com/grafana/mimir/tools/copyblocks#section-readme

container_args:
  - -source.backend=s3
  - -copy-period=24h
  - -destination.backend=s3
  - -dry-run=truef
  - -s3.source.bucket-name=<source bucket>
  - -min-block-duration=13h
  - -s3.destination.access-key-id=$(S3_ACCESS_KEY)
  - -s3.destination.bucket-name=<destination bucket>
  - -s3.destination.endpoint=s3.amazonaws.com
  - -s3.destination.secret-access-key=$(S3_SECRET_KEY)
  - -s3.source.endpoint=s3.amazonaws.com
  - -s3.source.access-key-id=$(S3_ACCESS_KEY)
  - -s3.source.secret-access-key=$(S3_SECRET_KEY)

